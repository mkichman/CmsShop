@model IEnumerable<CmsShop.Models.ViewModels.Cart.CartVM>

@{
    ViewBag.Title = "Koszyk szczegóły";
    int count = 1;
}

<h2>Koszyk szczegóły</h2>

@if (ViewBag.Message != null)
{
    <h3>@ViewBag.Message</h3>
}
else
{
    <div class="ajaxbg">
        <span>
            <img src="~/Content/img/ajax-loader.gif" />
        </span>
    </div>
    <table class="table">
        <tr>
            <th>
                Nazwa
            </th>
            <th>
                Ilość
            </th>
            <th>
                Cena
            </th>
            <th>
                Zdjęcie
            </th>
            <th>
                Zmień ilość
            </th>
            <th>
                Wartość
            </th>
            <th>

            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td class="qty@(item.ProductId)">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price) zł.
                </td>
                <td>
                    <img src="/Images/Uploads/Products/@item.ProductId/Thumbs/@item.Image" />
                </td>
                <td>
                    <a href="#" class="incrproduct" data-id="@item.ProductId">+</a>
                    <a href="#" class="decrproduct" data-id="@item.ProductId">-</a>
                    <a href="#" class="removeproduct" data-id="@item.ProductId">Usuń</a>
                </td>
                <td class="total@(item.ProductId)">
                    @Html.DisplayFor(modelItem => item.Total) zł.
                </td>
            </tr>
        }
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td class="grandtotal"><b>Razem: </b><span>@ViewBag.GrandTotal</span>zł.</td>
        </tr>

    </table>

    <br />
    if (Request.IsAuthenticated)
    {
        <a href="#" class="placeorder btn btn-primary pull-right" id="paypal-button-container">Zapłać</a>
    }
    else
    {
        <p> Zaloguj się, aby zrealizować zamówienie</p>
    }




}


@section scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=sb&currency=PLN"></script>

    <script>

        $(function () {



            // zwiekszenie ilosci produktu w koszyku
            $("a.incrproduct").click(function (e) {
                e.preventDefault();
                var productId = $(this).data("id");
                var url = "/cart/IncrementProduct";

                $.getJSON(url, { productId: productId }, function (data) {

                    $("td.qty" + productId).html(data.qty);

                    var price = data.qty * data.price;
                    var priceHtml = price.toFixed(2) + " zł.";

                    $("td.total" + productId).html(priceHtml);

                    var gt = parseFloat($("td.grandtotal span").text());
                    var grandtotal = (gt + data.price).toFixed(2);

                    $("td.grandtotal span").text(grandtotal);

                }).done(function (data) {
                    var url2 = "/cart/PaypalPartial";

                    $.get(url, {}, function (data) {

                        $('div.paypaldiv').html(data);

                    });
                });
            });


            // zmniejszenie ilosci produktu w koszyku
            $("a.decrproduct").click(function (e) {
                e.preventDefault();
                var $this = $(this);
                var productId = $(this).data("id");
                var url = "/cart/DecrementProduct";

                $.getJSON(url, { productId: productId }, function (data) {

                    if (data.qty == 0) {
                        $this.parent().parent().fadeOut("fast", function () {
                            location.reload();
                        })

                    } else {

                        $("td.qty" + productId).html(data.qty);

                        var price = data.qty * data.price;
                        var priceHtml = price.toFixed(2) + " zł.";

                        $("td.total" + productId).html(priceHtml);

                        var gt = parseFloat($("td.grandtotal span").text());
                        var grandtotal = (gt - data.price).toFixed(2);

                        $("td.grandtotal span").text(grandtotal);
                    }

                }).done(function (data) {
                    var url2 = "/cart/PaypalPartial";

                    $.get(url, {}, function (data) {

                        $('div.paypaldiv').html(data);

                    });
                });
            });

            // usuwanie produktu z koszyka
            $("a.removeproduct").click(function (e) {
                e.preventDefault();
                var $this = $(this);
                var productId = $(this).data("id");
                var url = "/cart/RemoveProduct";

                $.get(url, { productId: productId }, function (data) {

                    location.reload();

                });
            });



            // składanie zamówienia
            $("a.placeorder").click(function (e) {
                e.preventDefault();
                var $this = $(this);

                var url = "/cart/PlaceOrder";

                $(".ajaxbg").show();

                $.post(url, {}, function (data) {

                    $(".ajaxbg span").text("Zostaniesz teraz przekierowany do systemu PayPal..");

                });
            });
        /*
            // Render the PayPal button into #paypal-button-container
            paypal.Buttons({

                // Set up the transaction
                createOrder: function (data, actions) {
                    var gt = parseFloat($("td.grandtotal span").text());
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: gt
                            }
                        }]
                    });
                },

                // Finalize the transaction
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        // Show a success message to the buyer
                        alert('Transaction completed by ' + details.payer.name.given_name + '!');
                    });
                }


            }).render('#paypal-button-container');*/

        });
    </script>

}
